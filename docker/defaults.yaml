# -*- coding: utf-8 -*-
# vim: ft=yaml
---
docker:
  div: '/'
  formula: docker
  supported:
    - docker
    - compose
    - swarm
  wanted:
    - docker
    - compose

  pkg:
    version: 'latest'  # linux native package version
    name: docker-ce
    old:
      - docker
      - docker-client
      - docker-client-latest
      - docker-common
      - docker-latest
      - docker-latest-logrotate
      - docker-logrotate
      - docker-engine
      - docker.io
      - containerd
      - runc
      - docker-selinux
      - docker-engine-selinux

    docker:
      version: '19.03.9'  # archive package version
      config_file: /etc/default/docker
      config: {}
      environ_file: /etc/default/docker
      environ: {}
      daemon_config_file: /etc/docker/daemon.json
      daemon_config: {}

      name: docker-ce
      service:
        name: docker
        env: ''
      suffix: tgz
      commands:
        - docker
        - docker-init
        - runc
        - docker-proxy
        - containerd
        - ctr
        - dockerd
        - containerd-shim
      use_upstream: archive
      uri_a: 'https://download.docker.com/linux/static/stable'
      archive:
        options: '--strip-components=1'
        source_hash: '1c03c78be198d9085e7dd6806fc5d93264baaf0c7ea17f584d00af48eae508ee'
      desktop: {}   # macos/windows
      repo:
        comments:
          - installed by salt
        enabled: 1
        gpgcheck: 1
      firewall:
        ports:
          - 2375
          - 2376

    compose:
      version: 'latest'
      name: docker-compose
      suffix: ''
      commands:
        - docker-compose
      use_upstream: binary
      binary:
        options: ''
        # yamllint disable-line rule:line-length
        source: 'https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64'
        source_hash: null

  networks: {}
  containers:
    running: []
  compose:
    applications: []
    ng: {}
  swarm:
    joinswarm: {}
    leave_swarm: false
    node_ls: {}
    remove_node: {}
    remove_service: {}
    service_create: {}
    swarm_init: {}
    service_info: {}
    swarm_tokens: true
    update_node: {}

  dir:
    base: /usr/local
    source: /usr/local/src/docker/libs
    service: /usr/lib/systemd/system
    tmp: /tmp/saltstack-formulas-docker-tmp
    lib: /var/lib/docker
  linux:
    altpriority: 0
  identity:
    rootuser: root
    rootgroup: root
  arch: ''

  misc:
    force_absent: false
    force_present: false
    force_running: false
    skip_translate: None
    clean: false
    reload: true
    refresh: true
    firewall: false
    hold: false
    selinux: false

  retry_option:
    # https://docs.saltstack.com/en/latest/ref/states/requisites.html#retrying-states
    attempts: 3
    until: true
    interval: 60
    splay: 10

  # Just here for testing
  added_in_defaults: defaults_value
  winner: defaults
  version: ''
