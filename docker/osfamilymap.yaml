# -*- coding: utf-8 -*-
# vim: ft=yaml
#
# Setup variables using grains['os_family'] based logic.
# You just need to add the key:values for an `os_family` that differ
# from `defaults.yaml`.
# Only add an `os_family` which is/will be supported by the formula
#
# If you do not need to provide defaults via the `os_family` grain,
# you will need to provide at least an empty dict in this file, e.g.
# osfamilymap: {}
---
{%- if grains.os == 'MacOS' %}
    {%- set rootuser = salt['cmd.run']("stat -f '%Su' /dev/console") %}
    {%- set rootgroup = salt['cmd.run']("stat -f '%Sg' /dev/console") %}
{%- elif grains.os == 'Windows' %}
    {%- set rootuser = salt['cmd.run']("id -un") %}
{%- endif %}

Arch:
  pkg:
    docker:
      name: docker
    deps:
      - python-docker
      - python-pip
      # python2-pip  # see https://github.com/saltstack/salt/issues/48632

Debian:
  pkg:
    deps:
      - python3-apt
      - python3-pip
      - python3-docker
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - iptables
      - git
      - procps
    docker:
      repo:
                {%- if 'oscodename' in grains %}
        name: deb [arch=amd64] https://download.docker.com/linux/{{ grains.os|lower }} {{ grains.oscodename }} stable
                {%- endif %}
        file: /etc/apt/sources.list.d/docker.list
        key_url: "https://download.docker.com/linux/{{ grains.os|lower }}/gpg"

RedHat:
  pkg:
    deps:
      - python3-pip
      # python3-docker
      - iptables
      - git
      - tar
    docker:
      # environ_file: /etc/sysconfig/docker
      repo:
        name: docker-ce
        baseurl: 'https://download.docker.com/linux/{{ grains.os|lower }}/$releasever/$basearch/stable'
        file: '/etc/yum.repos.d/docker-ce.repo'
        gpgkey: 'https://download.docker.com/linux/{{ grains.os|lower }}/gpg'

Suse:
  pkg:
    deps:
      - python3-pip
      - python3-docker
      - tar
      - gzip
    docker:
      name: docker

MacOS:
  identity:
    rootuser: {{ rootuser | d('') }}
  pkg:
    deps:
      - python3-docker        # homebrew
      - docker-machine        # homebrew
    docker:
      name: Docker            # Docker Desktop (docker=homebrew)
      environ_file: /etc/defaults/docker
      use_upstream: desktop   # package or desktop (archive=docker client)
      uri_a: 'https://download.docker.com/mac/static/stable/'
      archive:
        source_hash: '487bb7179873e4b5f06b70f521a806d84edf7dddbeb4153dfc38b508faef5ab2'
      uri_d: 'https://desktop.docker.com/mac/stable/Docker'
      desktop:
        source_hash: 'db78429815fd571bbed319ece03fbe227a3d497b7d1d37c87b0e5a3600b9a23b'
      suffix: '.dmg'
    compose:
      name: docker-compose   # homebrew
      use_upstream: package   # Docker Desktop
      archive:
        source: 'https://github.com/docker/compose/releases/latest/download/docker-compose-Darwin-x86_64'
        source_hash: null

Windows:
  div: '\'
  dir:
    base: C:\\docker
    source: C:\\docker\src\libs
    operators: C:\\docker\src
    tmp: C:\\temp\docker
  identity:
    rootuser: {{ rootuser | d('') }}
  pkg:
    deps:
      - docker-cli
    docker:
      name: Docker-Desktop     # choco=docker-machine
      use_upstream: desktop    # choco or desktop
      uri_d: 'https://desktop.docker.com/win/stable/Docker%20Desktop%20Installer'
      desktop:
        source_hash: 'b81b399ec34505981f9f2b0b68d6eec81bfd706b9376350f4ee93c24fa4e2729'
      suffix: '.exe'
    compose:
      use_upstream: null    # included in docker-desktop
